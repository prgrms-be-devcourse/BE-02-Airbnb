buildscript {
	ext {
		queryDslVersion = "5.0.0"
	}
}

plugins {
	id 'org.springframework.boot' version '2.7.0'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'jacoco'
	id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
	id 'org.asciidoctor.jvm.convert' version '3.3.2'
	id "io.franzbecker.gradle-lombok" version "3.0.0"
}

jacoco {
	// JaCoCo 버전
	toolVersion = '0.8.5'
}

group = 'com.prgrms'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('snippetsDir', file("build/generated-snippets"))
}

bootJar {
	dependsOn asciidoctor
	copy {
		from "${asciidoctor.outputDir}"
		into 'BOOT-INF/classes/static/docs'
	}
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.apache.commons:commons-lang3'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect'
	implementation 'org.springframework.boot:spring-boot-devtools'
	implementation 'com.auth0:java-jwt:3.18.2'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2' //runtimeOnly 'mysql:mysql-connector-java'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	// https://mvnrepository.com/artifact/org.springframework.security.oauth/spring-security-oauth2
	implementation group: 'org.springframework.security.oauth', name: 'spring-security-oauth2', version: '2.5.2.RELEASE'

	// https://mvnrepository.com/artifact/org.springframework.security/spring-security-jwt
	implementation group: 'org.springframework.security', name: 'spring-security-jwt', version: '1.0.2.RELEASE'

	// https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-oauth2-client
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-oauth2-client', version: '2.6.1'

	//querydsl 추가
	implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
	annotationProcessor "com.querydsl:querydsl-apt:${queryDslVersion}"

	//RestDocs
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'

	//s3 설정
	implementation 'io.awspring.cloud:spring-cloud-starter-aws:2.3.1'

	implementation("com.amazonaws:aws-java-sdk-s3")
	testImplementation 'org.testcontainers:testcontainers:1.17.2'
	testImplementation 'org.testcontainers:junit-jupiter:1.17.2'
	testImplementation 'org.testcontainers:localstack:1.17.2'
	compile group: 'commons-fileupload', name: 'commons-fileupload', version: '1.4'
	compile group: 'commons-io', name: 'commons-io', version: '2.4'
}

tasks.named('test') {
	useJUnitPlatform()
	finalizedBy 'jacocoTestReport'
	outputs.dir snippetsDir
}

jacocoTestReport {
	reports {
		html.enabled true
		csv.enabled false
		xml.enabled false
	}
	finalizedBy 'jacocoTestCoverageVerification' // 추가
}

jacocoTestCoverageVerification {
	violationRules {
		rule {
			enabled = true
			element = 'CLASS'

			limit {
				counter = 'LINE'
				value = 'COVEREDRATIO'
				minimum = 0.85
			}

			limit {
				counter = 'BRANCH'
				value = 'COVEREDRATIO'
				minimum = 0.85
			}

			excludes = [
			        '*.Q*'
			]
		}
	}
}

//querydsl 추가 시작
//def querydslDir = 'src/main/generated'
def querydslDir = "$buildDir/generated/querydsl"
querydsl {
	jpa = true
	querydslSourcesDir = querydslDir
}
sourceSets {
	main.java.srcDir querydslDir
}
configurations {
	querydsl.extendsFrom compileClasspath
}
compileQuerydsl {
	options.annotationProcessorPath = configurations.querydsl
}
//querydsl 추가 끝

//restDocs
asciidoctor {
	inputs.dir snippetsDir
	dependsOn test
}

asciidoctor.doFirst {
	delete file('src/main/resources/static/docs')
}

task copyDocument(type: Copy) {
	dependsOn asciidoctor
	from file("build/docs/asciidoc")
	into file("src/main/resources/static/docs")
}

build {
	dependsOn copyDocument
}